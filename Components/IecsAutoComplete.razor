@using Radzen
@using Radzen.Blazor

<div class="form-group">
    <label for="@_id">Ciudades</label>
    <RadzenAutoComplete class="form-control"
        Placeholder="Escriba el nombre de una ciudad"
        Value=@_searched
        Change="@OnChange"
        Data=@cities
        TextProperty="Name" 
        FilterOperator="StringFilterOperator.Contains"
        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
        />

    <p><b>Usted esta buscando por: </b>@_searched</p>
</div>

@code
{
    private string _id = Guid.NewGuid().ToString();
    private string _searched = string.Empty;
    private IEnumerable<City> _suggested = new List<City>();

    public string Value {get;set;} = string.Empty;
    public IEnumerable<City> cities {get; set;} = new List<City>()
        {
            new City{ Id = Guid.NewGuid().ToString(), Name = "Agurain/Salvatierra", Code = "3"},
            new City{ Id = Guid.NewGuid().ToString(), Name = "Alegría-Dulantzi", Code = "4"},
            new City{ Id = Guid.NewGuid().ToString(), Name = "Amurrio", Code = "9"},
            new City{ Id = Guid.NewGuid().ToString(), Name = "Añana", Code = "3"},
            new City{ Id = Guid.NewGuid().ToString(), Name = "Zaragoza", Code = "3"},
            new City{ Id = Guid.NewGuid().ToString(), Name = "Zuera", Code = "9"},
            new City{ Id = Guid.NewGuid().ToString(), Name = "Ceuta", Code = "3"},
            new City{ Id = Guid.NewGuid().ToString(), Name = "Melilla", Code = "8"},
        };

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    void OnChange(dynamic args)
    {
        _searched = args;
    }


    public class City
    {
        public string Id {get;set;} = string.Empty;
        public string Name {get;set;} = string.Empty;
        public string Code {get;set;} = string.Empty;
    }
}