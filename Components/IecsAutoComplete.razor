@using Radzen
@using Radzen.Blazor

<div class="form-group">
    <label for="@_id">Ciudades</label>
    <RadzenAutoComplete class="form-control"
        @bind-Value=@Value 
        Data=@cities 
        TextProperty="Name" 
        LoadData=@OnLoadData/>
</div>

@code
{
    private string _id = Guid.NewGuid().ToString();

    public string Value {get;set;} = string.Empty;
    public IEnumerable<City> cities {get; set;} = new List<City>()
        {
            new City{ Id = Guid.NewGuid().ToString(), Name = "Agurain/Salvatierra", Code = "3"},
            new City{ Id = Guid.NewGuid().ToString(), Name = "Alegría-Dulantzi", Code = "4"},
            new City{ Id = Guid.NewGuid().ToString(), Name = "Amurrio", Code = "9"},
            new City{ Id = Guid.NewGuid().ToString(), Name = "Añana", Code = "3"},
            new City{ Id = Guid.NewGuid().ToString(), Name = "Zaragoza", Code = "3"},
            new City{ Id = Guid.NewGuid().ToString(), Name = "Zuera", Code = "9"},
            new City{ Id = Guid.NewGuid().ToString(), Name = "Ceuta", Code = "3"},
            new City{ Id = Guid.NewGuid().ToString(), Name = "Melilla", Code = "8"},
        };

    async Task OnLoadData(LoadDataArgs args)
    {
        cities = await Task.FromResult(cities.Where(c => c.Name.ToLower().Contains(args.Filter) || c.Code.ToLower().Contains(args.Filter)).OrderBy(c => c.Name));
    }


    public class City
    {
        public string Id {get;set;} = string.Empty;
        public string Name {get;set;} = string.Empty;
        public string Code {get;set;} = string.Empty;
    }
}